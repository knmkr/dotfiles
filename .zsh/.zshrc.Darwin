# ls
alias ls="ls -G -w"

# Homebrew
# FIXME: Suppose homebrew is installed at ~/homebrew or ~/local/brew
test -d ~/homebrew && BREW_HOME=~/homebrew || BREW_HOME=~/local/brew
if [ -d ${BREW_HOME} ]; then
    export PATH=${BREW_HOME}/bin:${BREW_HOME}/sbin:$PATH
fi

# iTerm2
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# source-highlight (Homebrew)  $ brew install source-highlight
export LESSOPEN="| ${BREW_HOME}/bin/src-hilite-lesspipe.sh %s"

# Git
export PATH=${BREW_HOME}/share/git-core/contrib/diff-highlight:$PATH

# Python

# # virtualenvwrapper
# if [ -f ${BREW_HOME}/bin/virtualenvwrapper.sh ]; then
#     export WORKON_HOME=${HOME}/.virtualenvs
#     export VIRTUALENVWRAPPER_PYTHON=${BREW_HOME}/bin/python3
#     source ${BREW_HOME}/bin/virtualenvwrapper.sh
# fi
# export PYTHONSTARTUP=~/.pythonstartup

# pipenv
export PIPENV_IGNORE_VIRTUALENVS=1


# tmux
if [ -n "$TMUX" ]; then
    alias pbcopy="reattach-to-user-namespace pbcopy"
    alias pbpaste="reattach-to-user-namespace pbpaste"
fi

# Java
alias javac="javac -J-Dfile.encoding=UTF-8"
alias java="java -Dfile.encoding=UTF-8"

# Go
export GOPATH=~/go
export GOBIN=$GOPATH/bin


# ag - The Silver Searcher
alias ag='ag -S --pager="less -R -F"'

# http://d.hatena.ne.jp/itchyny/20130227/1361933011
# HTML (Google Chrome.app)
alias google-chrome='open -a Google\ Chrome'
alias chrome='google-chrome'
alias -s {html,htm}=chrome
# Images (Preview.app)
alias eog='open -a Preview'
alias -s {png,jpg,bmp,PNG,JPG,BMP}=eog
# # Music
# alias -s {mp3,wav}=mplayer

# http://qiita.com/dvorak__/items/4e365746adc8f56e9764
for dir in /bin /usr/bin; do
    for cmd in $(find $dir -perm +6000 -type f -exec basename {} \;); do
        eval "$cmd() { ( unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; $dir/$cmd \$*) }"
    done
done

function backup-cloud-dir() {
    if [ ! $1 ] || [ ! $2 ] || [ $3 ]; then
        echo "Usage: $0 <src dir> <user>@<host>:<dest dir>"
    else
        # rsync --archive --hard-links --extended-attributes --verbose --human-readable --itemize-changes $1 $2
        rsync -av -e ssh --progress --partial --append $1 $2
    fi
}

function battery() {
    pmset -g batt| perl -ne 'print "$&\n" if /\d+%/'
}

function git-cleanup-local-branches() {
    git remote prune origin
    git branch -d $(git branch --merged)
    git branch -vv
}

function rotate-aws-access-key() {
    if [ ! $1 ] || [ ! $2 ]; then
        echo "Usage: $0 <username> <profile>"
    else
        OLD_KEY=$(aws iam list-access-keys --output text --query 'AccessKeyMetadata[0].AccessKeyId' --user-name $1 --profile $2)
        OUTPUT=$(aws iam create-access-key --output text --query 'AccessKey.[AccessKeyId,SecretAccessKey]' --user-name $1 --profile $2)
        printf "%s\n%s\n%s\n%s\n" $(echo ${OUTPUT}| cut -f1) $(echo ${OUTPUT}| cut -f2) "" ""| aws configure --profile $2; echo
        printf "%s\n%s\n%s\n%s\n" "" "" "" ""| aws configure --profile $2; echo
        echo aws iam update-access-key --access-key-id ${OLD_KEY} --status Inactive --user-name $1 --profile $2
        echo aws iam delete-access-key --access-key-id ${OLD_KEY} --user-name $1 --profile $2
        echo aws iam list-access-keys --user-name $1 --profile $2
    fi
}


# GNU
# brew install coreutils gawk gnu-sed gnu-tar findutils
alias head="ghead"
alias tail="gtail"
alias sort="gsort"
alias grep="ggrep"
alias paste="gpaste"
alias date="gdate"

alias awk="gawk"
alias sed="gsed"
alias tar="gtar"

alias xargs="gxargs"
